[def +  (a b) {a+b}]    \    
[def -  (a b) {a-b}]     \   Zabudovano,
[def =  (a b) {a==b}]     >  muze prijmout vice parametru,
[def >= (a b) {a>=b}]    /   umi pripravit funkci.
[def <= (a b) {a>=b}]   /    

[if <vyraz> [then <co>] [else <co>]]
[call <funkce> (<parametry>)]
[list a b c d ...]
[lambda (<parametry>) <obsah_funkce>] 

[def a () [+ 3 2]]
[def b () 1]

[def c () [+ a b]]

[def fib (1) 1]
[def fib (2) 1]
[def fib (n) [+ (fib [- n 1]) (fib [- n 2])] ]

[def obvodobdelniku (0 b) 0]  \  Tak asi
[def obvodobdelniku (a 0) 0]  /  nakonec ne.
[def obvodobdelniku (a b) [+ [* 2 a] [* 2 b]]]

[main 
	[print c]
	[print (fib 4)]
]

chutovky:
	funkce = () a vyrazy = []
	GC
	Zpozdene vyhodnoceni
	retezce + pole/slovniky/tuple/mnoziny + operace s nimi
	lambda fce
	konzole
	...

LOGICKE HODNOTY:
----------------

[def a () TRUE]
[def b () FALSE]
[not a]
[and a b] -- vrati FALSE

a co NULL??


LAMBDA FCE:
-----------

[def a(b c) b(c)]
[main
	[print (a [lambda (n) [* n n]] 5)] -- 25
	[print ([lambda (n) [+ n n]] 5)    -- 10
]


co treba:
[main
	[print [[+ 3] 4 ]] -- predupravena s jednim pevnym parametrem
	-- neboli [+ 3] vratilo fci, ktera ma jeden parametr
	-- nebo radsi bude vracet co mu prislusi??:
		[/ 5] -> 1/5
		[- 5] -> -5
]


DALSI MATERIALY
---------------
viditelnost a dalsi:
	http://itblob.havrlant.net/lisp-iii
http://www.ceng.metu.edu.tr/~ucoluk/research/lisp/lispman/lispman.html
